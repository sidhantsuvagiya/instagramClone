{"version":3,"sources":["firebase.js","ShowComment.js","Post.js","img/Instagram-Logo.png","auth.js","App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","db","firestore","ShowComment","pid","useState","comments","setComments","commentstoshow","setCommenttoshow","next","setNext","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","comment","data","loopWithSlice","start","end","mincomment","slice","className","CardContent","Typography","vcomponent","username","text","length","Button","style","width","margin","textTransform","color","size","onClick","Post","user","postUser","email","imgURL","captionVal","timeStamp","value","setValue","setComment","setColor","background","setBackground","likes","setLikes","allID","setAllID","btnDisabled","setBtnDisabled","Math","floor","random","toString","lid","getLikes","CardHeader","avatar","Avatar","alt","src","backgroundColor","title","subheader","CardActions","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","likeornot","delete","console","log","add","label","icon","TextField","placeholder","type","onChange","e","target","timestamp","Date","Auth","open","setOpen","open2","setOpen2","open3","setOpen3","handleClose","userLogin","setuserLogin","setEmail","password","setPassword","setUser","posts","setPosts","postToShow","setPostToShow","caption","setCaption","image","setImage","progress","setProgress","classes","makeStyles","root","height","textAlign","fontSize","useStyles","post","Instalogo","srcset","ml","variant","signOut","Dialog","maxWidth","onClose","aria-labelledby","DialogTitle","DialogContent","autoFocus","fullWidth","files","LinearProgress","DialogActions","ref","name","put","on","round","bytesTransferred","totalBytes","err","alert","message","child","getDownloadURL","then","url","userName","startIcon","signInWithEmailAndPassword","onAuthStateChanged","authUser","displayName","catch","capitalize","createUserWithEmailAndPassword","updateProfile","index","arr","String","toDate","toLocaleString","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4341c4e0.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBmJUNCqvM5Rsq0Rv4536zxzXUDtnMJJr8\",\r\n  authDomain: \"instagram-413da.firebaseapp.com\",\r\n  projectId: \"instagram-413da\",\r\n  storageBucket: \"instagram-413da.appspot.com\",\r\n  messagingSenderId: \"965882139626\",\r\n  appId: \"1:965882139626:web:298773257f006664a45893\",\r\n  measurementId: \"G-FCCS6EFPLD\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\nconst db = firebase.firestore();\r\n\r\nexport {auth,storage,db};\r\n","import React,{useState,useEffect} from \"react\";\r\nimport { auth, storage, db } from \"./firebase\";\r\nimport \"./App.css\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  CardContent,\r\n  \r\n} from \"@material-ui/core\";\r\n\r\n\r\nconst ShowComment = ({pid}) => {\r\n\r\n  const postsPerPage = 3;\r\n  let show = [];\r\n\r\n\r\n  const [comments, setComments] = useState([]);\r\n  const [commentstoshow, setCommenttoshow] = useState([]);\r\n  const [next, setNext] = useState(3);\r\n  const [arrayForHoldingPosts, setarrayForHoldingPosts] = useState([]);\r\n\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    let unsubscribe;\r\n    if (pid) {\r\n      unsubscribe = db\r\n        .collection(\"igdata\")\r\n        .doc(pid)\r\n        .collection(\"comments\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          setComments(\r\n            snapshot.docs.map((doc) => ({\r\n              id: doc.id,\r\n              comment: doc.data(),\r\n            }))\r\n          );\r\n        });\r\n\r\n        \r\n      }\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  },[pid]);\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n  useEffect(() => {\r\n  \r\n\r\n    loopWithSlice(0, postsPerPage);\r\n\r\n\r\n\r\n  }, [comments]);\r\n\r\n  \r\n  const loopWithSlice = (start,end) => {\r\n  const mincomment=comments.slice(start,end);\r\n    setCommenttoshow(mincomment);\r\n\r\n  }\r\n\r\n  const handleShowMorePosts = () => {\r\n    loopWithSlice(0, next + postsPerPage);\r\n    setNext(next + postsPerPage);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div  className=\"card\">\r\n     \r\n    <CardContent>\r\n          \r\n        \r\n        <div id=\"commentlable\">Comments:-</div>\r\n        {commentstoshow.map(({ id, comment }) => (\r\n          <Typography  vcomponent=\"p\" key={id} className=\"comment\">\r\n           <strong>{comment.username}</strong> {comment.text}\r\n          </Typography>\r\n        ))}\r\n   \r\n  \r\n      { \r\n        commentstoshow.length<comments.length\r\n    ?  <Button style={{ width:\"100%\", margin: \"auto\",textTransform: \"capitalize\"}} color=\"primary\" size=\"small\"  onClick={handleShowMorePosts}>More...</Button>\r\n      :<div></div>\r\n          \r\n          \r\n        }\r\n        </CardContent>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowComment;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport ShowComment from \"./ShowComment\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nimport {\r\n  Button,\r\n  Typography,\r\n  CardHeader,\r\n  CardContent,\r\n  TextField,\r\n  CardActions,\r\n  Avatar,\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n} from \"@material-ui/core\";\r\n\r\nconst Post = ({\r\n  user,\r\n  postUser,\r\n  id,\r\n  email,\r\n  imgURL,\r\n  captionVal,\r\n  timeStamp,\r\n}) => {\r\n  const [value, setValue] = useState(1);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [color, setColor] = useState(\"gray\");\r\n  const [background, setBackground] = useState(\"gray\");\r\n  const [likes, setLikes] = useState(0);\r\n  const [allID, setAllID] = useState([]);\r\n  const [btnDisabled, setBtnDisabled] = useState(true);\r\n\r\n  // for random background color\r\n  function randomColor() {\r\n    let hex = Math.floor(Math.random() * 0xffffff);\r\n    let color = \"#\" + hex.toString(16);\r\n\r\n    return color;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setBackground(randomColor());\r\n  }, []);\r\n  // ------------------------------------\r\n\r\n  useEffect(() => {\r\n    setColor(\"gray\");\r\n    let unsubscribe;\r\n    if (id) {\r\n      unsubscribe = db\r\n        .collection(\"igdata\")\r\n        .doc(id)\r\n        .collection(\"likes\")\r\n        .onSnapshot((snapshot) => {\r\n          setLikes(snapshot.size);\r\n          setAllID(\r\n            snapshot.docs.map((doc) => ({\r\n              lid: doc.id,\r\n              likes: doc.data(),\r\n            }))\r\n          );\r\n\r\n          snapshot.docs.map((doc) => {\r\n            let postemail = doc.data().email;\r\n            if (postemail == email) {\r\n              setColor(\"red\");\r\n            }\r\n          });\r\n        });\r\n    }\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [email]);\r\n\r\n  // Getlikes ❤️\r\n\r\n  const getLikes = () => {\r\n    db.collection(\"igdata\")\r\n      .doc(id)\r\n      .collection(\"likes\")\r\n      .onSnapshot((snapshot) => {\r\n        setLikes(snapshot.size);\r\n        setAllID(\r\n          snapshot.docs.map((doc) => ({\r\n            lid: doc.id,\r\n            likes: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n  };\r\n\r\n  //  Updatelikes\r\n\r\n  const updateLike = () => {\r\n    let likeornot = 0;\r\n    const islike = () => {\r\n      allID.map(({ lid, likes }) => {\r\n        let lemail = likes.email;\r\n        if (lemail == email) {\r\n          db.collection(\"igdata\").doc(id).collection(\"likes\").doc(lid).delete();\r\n\r\n          likeornot = 1;\r\n          return;\r\n        }\r\n      });\r\n    };\r\n\r\n    //  check the user like or not\r\n\r\n    islike();\r\n\r\n    if (likeornot) {\r\n      setColor(\"gray\");\r\n      console.log(\"grayu\");\r\n      getLikes();\r\n    } else {\r\n      db.collection(\"igdata\").doc(id).collection(\"likes\").add({\r\n        email: email,\r\n      });\r\n      setColor(\"red\");\r\n\r\n      getLikes();\r\n    }\r\n  };\r\n  // ---------------------------\r\n  return (\r\n    <>\r\n      {/* main post */}\r\n\r\n      <div className=\"card\" key={id}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar\r\n              className=\"post__avatar\"\r\n              alt={postUser}\r\n              src={postUser}\r\n              style={{\r\n                backgroundColor: background,\r\n              }}\r\n            />\r\n          }\r\n          title={postUser}\r\n          id=\"avatarText\"\r\n          subheader={timeStamp}\r\n        />\r\n        <img id=\"postimg\" src={imgURL} alt=\"postimage\" />\r\n        <CardContent>\r\n          <Typography className=\"caption\" vcomponent=\"caption\">\r\n            <span>\r\n              <strong>{`@${postUser}`}</strong>\r\n            </span>\r\n            {captionVal}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        {/* ------------------------------------------ */}\r\n\r\n        {/* new component */}\r\n        <ShowComment pid={id} />\r\n\r\n\r\n     {/* Comment and like card if user exist */}\r\n  {   (user)?\r\n            (\r\n        <CardActions>\r\n          <BottomNavigation\r\n            value={value}\r\n            onClick={(event, newValue) => {\r\n              setValue(newValue);\r\n            }}\r\n            showLabels\r\n          >\r\n            <BottomNavigationAction\r\n              onClick={updateLike}\r\n              style={{ color }}\r\n              label={likes}\r\n              icon={<FavoriteIcon />}\r\n            />\r\n\r\n            <form className=\"commentSection\">\r\n              <TextField\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Add Comment\"\r\n                type=\"text\"\r\n                value={comment}\r\n                onChange={(e) => {\r\n                  setComment(e.target.value);\r\n                  setBtnDisabled(!e.target.value);\r\n                }}\r\n              />\r\n\r\n              <Button\r\n                className=\"commentBtn\"\r\n                className=\"post_button\"\r\n                color=\"primary\"\r\n                disabled={btnDisabled}\r\n                onClick={() => {\r\n                  db.collection(\"igdata\").doc(id).collection(\"comments\").add({\r\n                    timestamp: new Date(),\r\n                    text: comment,\r\n                    username: user,\r\n                  });\r\n\r\n                  setComment(\"\");\r\n                  setBtnDisabled(true);\r\n                }}\r\n                size=\"small\"\r\n              >\r\n                post\r\n              </Button>\r\n            </form>\r\n          </BottomNavigation>\r\n        </CardActions>\r\n\r\n  ): null}\r\n      </div>\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","export default __webpack_public_path__ + \"static/media/Instagram-Logo.888d5c91.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { auth, storage, db } from \"./firebase\";\r\nimport Post from \"./Post\";\r\n\r\nimport {\r\n  makeStyles,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  TextField,\r\n  LinearProgress,\r\n  DialogActions,\r\n  DialogTitle,\r\n  capitalize,\r\n} from \"@material-ui/core\";\r\n\r\nimport Instalogo from \"./img/Instagram-Logo.png\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport \"./App.css\";\r\n\r\nconst Auth = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [open2, setOpen2] = useState(false);\r\n  const [open3, setOpen3] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClickOpen2 = () => {\r\n    setOpen2(true);\r\n  };\r\n  const handleClickOpen3 = () => {\r\n    setOpen3(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setOpen2(false);\r\n    setOpen3(false);\r\n  };\r\n\r\n  const [userLogin, setuserLogin] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [postToShow, setPostToShow] = useState(3);\r\n  const [caption, setCaption] = useState();\r\n  const [image, setImage] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  //  matireal ui style\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      height: 0,\r\n      textAlign: \"center\",\r\n      fontSize: \"90\",\r\n    },\r\n    progress: {\r\n      width: \"100%\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  // ------------------------\r\n\r\n  //  getPost\r\n\r\n  useEffect(() => {\r\n    db.collection(\"igdata\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            post: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const login = () => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((e) => {\r\n        auth.onAuthStateChanged((authUser) => {\r\n          if (authUser !== null) {\r\n            // user has logged in...\r\n            setUser(authUser.displayName);\r\n          }\r\n        });\r\n\r\n        setuserLogin(true);\r\n        handleClose();\r\n      })\r\n      .catch((e) => {\r\n        alert(e.message);\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  // signUP\r\n  const signup = () => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        authUser.user.updateProfile({\r\n          displayName: user,\r\n        });\r\n\r\n        setuserLogin(true);\r\n        handleClose();\r\n      })\r\n      .catch((e) => {\r\n        alert(e.message);\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const logOut = (e) => {\r\n    auth.signOut();\r\n    setUser(null);\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setuserLogin(false);\r\n  };\r\n\r\n  const handleFile = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const sendPost = () => {\r\n    if (image && image.size <= 3000000) {\r\n      const uploadIMG = storage.ref(`images/${image.name}`).put(image);\r\n      uploadIMG.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          setProgress(\r\n            Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\r\n          );\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          alert(err.message);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(`images`)\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              db.collection(\"igdata\").add({\r\n                timestamp: new Date(),\r\n                userName: user,\r\n                caption: caption,\r\n                imgURL: url,\r\n                likes: 0,\r\n              });\r\n            });\r\n          setImage(null);\r\n          setCaption(\"\");\r\n          setProgress(0);\r\n          handleClose();\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"Error Please Choose An Image OR Less Than 3MB \");\r\n    }\r\n  };\r\n\r\n  // return statement\r\n\r\n  return (\r\n    <>\r\n\r\n      <header>\r\n        <img className=\"instalogo\" src={Instalogo} alt=\"\" srcset=\"\" />\r\n\r\n        {!userLogin ? (\r\n          <>\r\n            <div className=\"signupLogin\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen2}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </div>\r\n\r\n            {/* pop up coding  1st login */}\r\n\r\n            <Dialog\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle className={classes.root} id=\"form-dialog-title\">\r\n                Sign In\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  label=\"Enter Email\"\r\n                  type=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  label=\"Enter Password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  type=\"password\"\r\n                  fullWidth\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={handleClose}\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={login} variant=\"outlined\" color=\"primary\">\r\n                  Sign In\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* dialog 2  sign up */}\r\n            <Dialog\r\n              style={{ maxWidth: 350, margin: \"auto\" }}\r\n              open={open2}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle className={classes.root} id=\"form-dialog-title\">\r\n                Sign Up\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  style={{ textTransform: capitalize }}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  label=\"Your Name\"\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    if (e.target.value) {\r\n                      setUser(e.target.value);\r\n                    }\r\n                  }}\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  label=\"Enter Email \"\r\n                  type=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  label=\"Enter Password\"\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  fullWidth\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={handleClose}\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={signup} variant=\"outlined\" color=\"primary\">\r\n                  Sign Up\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* Log Out */}\r\n            <div className=\"signupLogin\">\r\n              <Button\r\n                ml={5}\r\n                className=\"logout\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={logOut}\r\n              >\r\n                Log out\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen3}\r\n              >\r\n                Add Post\r\n              </Button>\r\n            </div>\r\n\r\n            {/* pop up coding for Upload */}\r\n            <Dialog\r\n              style={{ maxWidth: 350, margin: \"auto\" }}\r\n              open={open3}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle className={classes.root} id=\"form-dialog-title\">\r\n                Upload Post\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <div>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label=\"Caption\"\r\n                    value={caption}\r\n                    onChange={(e) => setCaption(e.target.value)}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    color=\"primary\"\r\n                    margin=\"dense\"\r\n                    style={{ margin: \"8px 0 14px 0\" }}\r\n                    onChange={handleFile}\r\n                    type=\"file\"\r\n                    fullWidth\r\n                  />\r\n\r\n                  <LinearProgress variant=\"determinate\" value={progress} />\r\n                </div>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={handleClose}\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  size=\"large\"\r\n                >\r\n                  Cancle\r\n                </Button>\r\n\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={sendPost}\r\n                  variant=\"outlined\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Upload\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </>\r\n        )}\r\n      </header>\r\n\r\n      {/* show all post  */}\r\n\r\n      <div className=\"postContainer\">\r\n        {posts.map(({ id, post }, index, arr) =>\r\n          index < postToShow ? (\r\n            <Post\r\n              key={id}\r\n              user={user}\r\n              postUser={post.userName}\r\n              id={id}\r\n              email={email}\r\n              imgURL={post.imgURL}\r\n              captionVal={post.caption}\r\n              timeStamp={String(post.timestamp.toDate().toLocaleString())}\r\n            />\r\n          ) : null\r\n        )}\r\n      </div>\r\n      {/* limit post only 3 */}\r\n      {postToShow < posts.length ? (\r\n        <Button\r\n          color=\"primary\"\r\n          style={{ width: \"100%\", margin: \"auto\", textTransform: \"capitalize\" }}\r\n          onClick={() => setPostToShow(postToShow + 3)}\r\n        >\r\n          Show More Post...\r\n        </Button>\r\n      ) : null}\r\n\r\n    \r\n    \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport Auth from \"./auth\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Auth />\r\n     \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <>\n    <App />\n    \n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}